import React from 'react';

interface PackageManagerBadgeProps {
  manager: string;
  size?: 'sm' | 'md' | 'lg';
}

export const PackageManagerBadge: React.FC<PackageManagerBadgeProps> = ({ 
  manager, 
  size = 'sm' 
}) => {
  const config = {
    npm: {
      label: 'npm',
      classes: 'bg-red-100 text-red-700 border-red-200',
    },
    yarn: {
      label: 'yarn',
      classes: 'bg-blue-100 text-blue-700 border-blue-200',
    },
    pip: {
      label: 'pip',
      classes: 'bg-green-100 text-green-700 border-green-200',
    },
    poetry: {
      label: 'poetry',
      classes: 'bg-green-100 text-green-700 border-green-200',
    },
    maven: {
      label: 'maven',
      classes: 'bg-purple-100 text-purple-700 border-purple-200',
    },
    gradle: {
      label: 'gradle',
      classes: 'bg-indigo-100 text-indigo-700 border-indigo-200',
    },
    go: {
      label: 'go',
      classes: 'bg-cyan-100 text-cyan-700 border-cyan-200',
    },
    bundler: {
      label: 'bundler',
      classes: 'bg-pink-100 text-pink-700 border-pink-200',
    },
  };

  const sizeClasses = {
    sm: 'px-1.5 py-0.5 text-xs',
    md: 'px-2 py-0.5 text-sm',
    lg: 'px-2.5 py-1 text-base',
  };

  const managerKey = manager.toLowerCase() as keyof typeof config;
  const managerConfig = config[managerKey] || {
    label: manager,
    classes: 'bg-gray-100 text-gray-700 border-gray-200',
  };

  return (
    <span className={`
      inline-flex items-center font-medium rounded border
      ${managerConfig.classes}
      ${sizeClasses[size]}
    `}>
      {managerConfig.label}
    </span>
  );
}; 