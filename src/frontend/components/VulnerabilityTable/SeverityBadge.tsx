import React from 'react';
import { 
  ExclamationTriangleIcon, 
  ShieldExclamationIcon,
  ExclamationCircleIcon,
  InformationCircleIcon
} from '@heroicons/react/24/outline';

interface SeverityBadgeProps {
  severity: 'critical' | 'high' | 'medium' | 'low' | 'info';
  showIcon?: boolean;
  size?: 'sm' | 'md' | 'lg';
}

export const SeverityBadge: React.FC<SeverityBadgeProps> = ({ 
  severity, 
  showIcon = true, 
  size = 'md' 
}) => {
  const config = {
    critical: {
      label: 'Critical',
      icon: ShieldExclamationIcon,
      classes: 'bg-red-100 text-red-800 border-red-200',
      iconClasses: 'text-red-600',
    },
    high: {
      label: 'High',
      icon: ExclamationTriangleIcon,
      classes: 'bg-orange-100 text-orange-800 border-orange-200',
      iconClasses: 'text-orange-600',
    },
    medium: {
      label: 'Medium',
      icon: ExclamationCircleIcon,
      classes: 'bg-yellow-100 text-yellow-800 border-yellow-200',
      iconClasses: 'text-yellow-600',
    },
    low: {
      label: 'Low',
      icon: InformationCircleIcon,
      classes: 'bg-blue-100 text-blue-800 border-blue-200',
      iconClasses: 'text-blue-600',
    },
    info: {
      label: 'Info',
      icon: InformationCircleIcon,
      classes: 'bg-gray-100 text-gray-800 border-gray-200',
      iconClasses: 'text-gray-600',
    },
  };

  const sizeClasses = {
    sm: 'px-2 py-1 text-xs',
    md: 'px-2.5 py-0.5 text-sm',
    lg: 'px-3 py-1 text-base',
  };

  const iconSizeClasses = {
    sm: 'h-3 w-3',
    md: 'h-4 w-4',
    lg: 'h-5 w-5',
  };

  const severityConfig = config[severity] || config.medium; // Fallback to medium if unknown severity
  
  // Debug log for unexpected severity values
  if (!config[severity]) {
    console.warn(`Unknown severity value: "${severity}". Using "medium" as fallback.`);
  }
  
  const Icon = severityConfig.icon;

  return (
    <span className={`
      inline-flex items-center font-medium rounded-full border
      ${severityConfig.classes}
      ${sizeClasses[size]}
    `}>
      {showIcon && (
        <Icon className={`mr-1 ${iconSizeClasses[size]} ${severityConfig.iconClasses}`} />
      )}
      {severityConfig.label}
    </span>
  );
}; 