import React from 'react';
import { ExclamationTriangleIcon, ShieldExclamationIcon } from '@heroicons/react/24/outline';
import type { VulnerabilitySeverity } from '../../types';

interface SeverityBadgeProps {
  severity: VulnerabilitySeverity;
  size?: 'xs' | 'sm' | 'md' | 'lg';
  showIcon?: boolean;
  variant?: 'solid' | 'outline' | 'minimal';
}

const severityConfig = {
  critical: {
    label: 'Critical',
    solid: 'bg-red-100 text-red-800 border-red-200',
    outline: 'border-red-300 text-red-700 bg-red-50',
    minimal: 'text-red-600',
    icon: ShieldExclamationIcon,
  },
  high: {
    label: 'High',
    solid: 'bg-orange-100 text-orange-800 border-orange-200',
    outline: 'border-orange-300 text-orange-700 bg-orange-50',
    minimal: 'text-orange-600',
    icon: ExclamationTriangleIcon,
  },
  medium: {
    label: 'Medium',
    solid: 'bg-yellow-100 text-yellow-800 border-yellow-200',
    outline: 'border-yellow-300 text-yellow-700 bg-yellow-50',
    minimal: 'text-yellow-600',
    icon: ExclamationTriangleIcon,
  },
  low: {
    label: 'Low',
    solid: 'bg-blue-100 text-blue-800 border-blue-200',
    outline: 'border-blue-300 text-blue-700 bg-blue-50',
    minimal: 'text-blue-600',
    icon: ExclamationTriangleIcon,
  },
  info: {
    label: 'Info',
    solid: 'bg-gray-100 text-gray-800 border-gray-200',
    outline: 'border-gray-300 text-gray-700 bg-gray-50',
    minimal: 'text-gray-600',
    icon: ExclamationTriangleIcon,
  },
};

const sizeConfig = {
  xs: {
    padding: 'px-1.5 py-0.5',
    text: 'text-xs',
    iconSize: 'h-2.5 w-2.5',
  },
  sm: {
    padding: 'px-2 py-1',
    text: 'text-xs',
    iconSize: 'h-3 w-3',
  },
  md: {
    padding: 'px-2.5 py-1.5',
    text: 'text-sm',
    iconSize: 'h-4 w-4',
  },
  lg: {
    padding: 'px-3 py-2',
    text: 'text-base',
    iconSize: 'h-5 w-5',
  },
};

export const SeverityBadge: React.FC<SeverityBadgeProps> = ({
  severity,
  size = 'md',
  showIcon = false,
  variant = 'solid',
}) => {
  const config = severityConfig[severity];
  const sizeClass = sizeConfig[size];
  const IconComponent = config.icon;

  const baseClasses = `
    inline-flex items-center font-medium rounded-full
    ${sizeClass.padding} ${sizeClass.text}
    transition-colors duration-150
  `;

  const variantClasses = {
    solid: `${config.solid} border`,
    outline: `${config.outline} border`,
    minimal: `${config.minimal} bg-transparent`,
  };

  return (
    <span className={`${baseClasses} ${variantClasses[variant]}`}>
      {showIcon && (
        <IconComponent className={`${sizeClass.iconSize} mr-1`} />
      )}
      {config.label}
    </span>
  );
}; 