import React from 'react';
import { ArrowRightIcon, InformationCircleIcon } from '@heroicons/react/24/outline';
import { PackageManagerIcon } from './PackageManagerIcon';
import type { PackageManager } from '../../types';

interface DependencyBadgeProps {
  name: string;
  version: string;
  targetVersion?: string;
  packageManager: PackageManager;
  compact?: boolean;
  showVersionUpgrade?: boolean;
}

export const DependencyBadge: React.FC<DependencyBadgeProps> = ({
  name,
  version,
  targetVersion,
  packageManager,
  compact = false,
  showVersionUpgrade = true,
}) => {
  // Truncate long package names for display
  const displayName = name.length > 30 ? `${name.substring(0, 27)}...` : name;
  
  const hasUpgrade = targetVersion && targetVersion !== 'latest' && targetVersion !== version && targetVersion !== 'unknown';

  if (compact) {
    return (
      <div className="flex items-center space-x-2 text-sm">
        <PackageManagerIcon manager={packageManager} size="sm" />
        <div className="flex-1 min-w-0">
          <span className="font-mono text-gray-900 truncate block" title={name}>
            {displayName}
          </span>
          <div className="flex items-center space-x-2 text-xs text-gray-600">
            <span className="font-mono">v{version}</span>
            {hasUpgrade && showVersionUpgrade && (
              <>
                <ArrowRightIcon className="h-3 w-3" />
                <span className="font-mono text-green-600">v{targetVersion}</span>
              </>
            )}
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="flex items-center space-x-3">
      <PackageManagerIcon manager={packageManager} size="md" />
      
      <div className="flex-1 min-w-0">
        <div className="flex items-center space-x-2">
          <h4 className="font-mono text-sm font-medium text-gray-900 truncate" title={name}>
            {displayName}
          </h4>
          {name.length > 30 && (
            <div className="group relative">
              <InformationCircleIcon className="h-4 w-4 text-gray-400 cursor-help" />
              <div className="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap z-10 pointer-events-none">
                {name}
                <div className="absolute top-full left-1/2 transform -translate-x-1/2 w-2 h-2 bg-gray-900 rotate-45 -mt-1"></div>
              </div>
            </div>
          )}
        </div>
        
        <div className="flex items-center space-x-3 mt-1">
          <div className="flex items-center space-x-2">
            <span className="inline-flex items-center px-2 py-1 rounded-md text-xs bg-gray-100 text-gray-800 font-mono">
              Current: v{version}
            </span>
            
            {hasUpgrade && showVersionUpgrade && (
              <>
                <ArrowRightIcon className="h-4 w-4 text-gray-400" />
                <span className="inline-flex items-center px-2 py-1 rounded-md text-xs bg-green-100 text-green-800 font-mono">
                  Recommended: v{targetVersion}
                </span>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}; 