import React from 'react';
import { 
  CodeBracketIcon,
  CubeIcon,
  CommandLineIcon,
  DocumentIcon,
  ArchiveBoxIcon
} from '@heroicons/react/24/outline';
import type { PackageManager } from '../../types';

interface PackageManagerIconProps {
  manager: PackageManager;
  size?: 'xs' | 'sm' | 'md' | 'lg';
  showLabel?: boolean;
}

const packageManagerConfig = {
  npm: {
    icon: CubeIcon,
    label: 'npm',
    color: 'text-red-600',
    bgColor: 'bg-red-50',
  },
  yarn: {
    icon: CubeIcon,
    label: 'Yarn',
    color: 'text-blue-600',
    bgColor: 'bg-blue-50',
  },
  maven: {
    icon: ArchiveBoxIcon,
    label: 'Maven',
    color: 'text-orange-600',
    bgColor: 'bg-orange-50',
  },
  gradle: {
    icon: CodeBracketIcon,
    label: 'Gradle',
    color: 'text-green-600',
    bgColor: 'bg-green-50',
  },
  pip: {
    icon: CommandLineIcon,
    label: 'pip',
    color: 'text-blue-600',
    bgColor: 'bg-blue-50',
  },
  poetry: {
    icon: CommandLineIcon,
    label: 'Poetry',
    color: 'text-indigo-600',
    bgColor: 'bg-indigo-50',
  },
  go: {
    icon: CodeBracketIcon,
    label: 'Go',
    color: 'text-cyan-600',
    bgColor: 'bg-cyan-50',
  },
  bundler: {
    icon: DocumentIcon,
    label: 'Bundler',
    color: 'text-red-600',
    bgColor: 'bg-red-50',
  },
};

const sizeConfig = {
  xs: {
    iconSize: 'h-3 w-3',
    padding: 'p-1',
    textSize: 'text-xs',
  },
  sm: {
    iconSize: 'h-4 w-4',
    padding: 'p-1.5',
    textSize: 'text-xs',
  },
  md: {
    iconSize: 'h-5 w-5',
    padding: 'p-2',
    textSize: 'text-sm',
  },
  lg: {
    iconSize: 'h-6 w-6',
    padding: 'p-2.5',
    textSize: 'text-base',
  },
};

export const PackageManagerIcon: React.FC<PackageManagerIconProps> = ({
  manager,
  size = 'md',
  showLabel = false,
}) => {
  const config = packageManagerConfig[manager] || packageManagerConfig.npm;
  const sizeClass = sizeConfig[size];
  const IconComponent = config.icon;

  if (showLabel) {
    return (
      <div className="flex items-center space-x-2">
        <div className={`
          inline-flex items-center justify-center rounded-md
          ${sizeClass.padding} ${config.bgColor}
        `}>
          <IconComponent className={`${sizeClass.iconSize} ${config.color}`} />
        </div>
        <span className={`font-medium text-gray-700 ${sizeClass.textSize}`}>
          {config.label}
        </span>
      </div>
    );
  }

  return (
    <div 
      className={`
        inline-flex items-center justify-center rounded-md
        ${sizeClass.padding} ${config.bgColor}
      `}
      title={config.label}
    >
      <IconComponent className={`${sizeClass.iconSize} ${config.color}`} />
    </div>
  );
}; 